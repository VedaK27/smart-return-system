{"ast":null,"code":"import { selectAxisWithScale } from './state/selectors/axisSelectors';\nimport { useAppSelector } from './state/hooks';\nimport { useIsPanorama } from './context/PanoramaContext';\nimport { selectActiveLabel } from './state/selectors/tooltipSelectors';\nexport var useXAxis = xAxisId => {\n  var isPanorama = useIsPanorama();\n  return useAppSelector(state => selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama));\n};\nexport var useYAxis = yAxisId => {\n  var isPanorama = useIsPanorama();\n  return useAppSelector(state => selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama));\n};\n\n/**\r\n * Returns the active tooltip label. The label is one of the values from the chart data,\r\n * and is used to display in the tooltip content.\r\n *\r\n * Returns undefined if there is no active user interaction.\r\n *\r\n * @returns string | undefined\r\n */\nexport var useActiveTooltipLabel = () => {\n  return useAppSelector(selectActiveLabel);\n};","map":{"version":3,"names":["selectAxisWithScale","useAppSelector","useIsPanorama","selectActiveLabel","useXAxis","xAxisId","isPanorama","state","useYAxis","yAxisId","useActiveTooltipLabel"],"sources":["C:/21333/reverse logistics/smart-return-system/frontend/node_modules/recharts/es6/hooks.js"],"sourcesContent":["import { selectAxisWithScale } from './state/selectors/axisSelectors';\r\nimport { useAppSelector } from './state/hooks';\r\nimport { useIsPanorama } from './context/PanoramaContext';\r\nimport { selectActiveLabel } from './state/selectors/tooltipSelectors';\r\nexport var useXAxis = xAxisId => {\r\n  var isPanorama = useIsPanorama();\r\n  return useAppSelector(state => selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama));\r\n};\r\nexport var useYAxis = yAxisId => {\r\n  var isPanorama = useIsPanorama();\r\n  return useAppSelector(state => selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama));\r\n};\r\n\r\n/**\r\n * Returns the active tooltip label. The label is one of the values from the chart data,\r\n * and is used to display in the tooltip content.\r\n *\r\n * Returns undefined if there is no active user interaction.\r\n *\r\n * @returns string | undefined\r\n */\r\nexport var useActiveTooltipLabel = () => {\r\n  return useAppSelector(selectActiveLabel);\r\n};"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,iCAAiC;AACrE,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,iBAAiB,QAAQ,oCAAoC;AACtE,OAAO,IAAIC,QAAQ,GAAGC,OAAO,IAAI;EAC/B,IAAIC,UAAU,GAAGJ,aAAa,CAAC,CAAC;EAChC,OAAOD,cAAc,CAACM,KAAK,IAAIP,mBAAmB,CAACO,KAAK,EAAE,OAAO,EAAEF,OAAO,EAAEC,UAAU,CAAC,CAAC;AAC1F,CAAC;AACD,OAAO,IAAIE,QAAQ,GAAGC,OAAO,IAAI;EAC/B,IAAIH,UAAU,GAAGJ,aAAa,CAAC,CAAC;EAChC,OAAOD,cAAc,CAACM,KAAK,IAAIP,mBAAmB,CAACO,KAAK,EAAE,OAAO,EAAEE,OAAO,EAAEH,UAAU,CAAC,CAAC;AAC1F,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAII,qBAAqB,GAAGA,CAAA,KAAM;EACvC,OAAOT,cAAc,CAACE,iBAAiB,CAAC;AAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}